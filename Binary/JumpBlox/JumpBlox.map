Archive member included to satisfy reference by file (symbol)

../../../code/software/libs/build/lib/libstart_serial.a(init.o)
                              (_start)
../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
                              ../../../code/software/libs/build/lib/libstart_serial.a(init.o) (__kinit)

Discarded input sections

 seg1000        0x00000000      0xba7 kmain.o
 .text          0x00000000        0x0 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
 .data          0x00000000        0x0 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
 .bss           0x00000000        0x0 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
 .text.__cxa_atexit
                0x00000000       0x4c ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
 .bss.__dso_handle
                0x00000000        0x4 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

Memory Configuration

Name             Origin             Length             Attributes
RAM              0x00000000         0x00100000
EXP_RAM          0x00100000         0x00d00000
ROM              0x00e00000         0x00100000
IO_SPACE         0x00f00000         0x00100000
*default*        0x00000000         0xffffffff

Linker script and memory map

                [!provide]                        PROVIDE (_STACK_SIZE = 0x4000)
                [!provide]                        PROVIDE (_INITIAL_STACK = 0x0)
                [!provide]                        PROVIDE (_WARM_BOOT = 0x4)
                [!provide]                        PROVIDE (_MFP_VECTORS = 0x100)
                [!provide]                        PROVIDE (_SDB = 0x400)
                [!provide]                        PROVIDE (_SDB_MAGIC = 0x400)
                [!provide]                        PROVIDE (_SDB_STATUS = 0x404)
                [!provide]                        PROVIDE (_SDB_RSRVD_408 = 0x408)
                [!provide]                        PROVIDE (_TIMER_100HZ = 0x40c)
                [!provide]                        PROVIDE (_EASY68K_ECHOON = 0x410)
                [!provide]                        PROVIDE (_EASY68K_PROMPT = 0x411)
                [!provide]                        PROVIDE (_EASY68K_SHOWLF = 0x412)
                [!provide]                        PROVIDE (_SDB_RSRVD_413 = 0x413)
                [!provide]                        PROVIDE (_SDB_MEM_SIZE = 0x414)
                [!provide]                        PROVIDE (_SDB_UART_BASE = 0x418)
                [!provide]                        PROVIDE (_SDB_CPU_INFO = 0x41c)
                [!provide]                        PROVIDE (_EFP_TABLE = 0x420)
                [!provide]                        PROVIDE (_EFP_PRINT = 0x420)
                [!provide]                        PROVIDE (_EFP_PRINTLN = 0x424)
                [!provide]                        PROVIDE (_EFP_PRINTCHAR = 0x428)
                [!provide]                        PROVIDE (_EFP_HALT = 0x42c)
                [!provide]                        PROVIDE (_EFP_SENDCHAR = 0x430)
                [!provide]                        PROVIDE (_EFP_RECVCHAR = 0x434)
                [!provide]                        PROVIDE (_EFP_CLRSCR = 0x438)
                [!provide]                        PROVIDE (_EFP_MOVEXY = 0x43c)
                [!provide]                        PROVIDE (_EFP_SETCURSOR = 0x440)
                [!provide]                        PROVIDE (_EFP_CHECKCHAR = 0x444)
                [!provide]                        PROVIDE (_EFP_PROGLOADER = 0x448)
                [!provide]                        PROVIDE (_EFP_SD_INIT = 0x44c)
                [!provide]                        PROVIDE (_EFP_SD_READ = 0x450)
                [!provide]                        PROVIDE (_EFP_SD_WRITE = 0x454)
                [!provide]                        PROVIDE (_EFP_SD_REG = 0x458)
                [!provide]                        PROVIDE (_EFP_SPI_INIT = 0x45c)
                [!provide]                        PROVIDE (_EFP_SPI_CS_A = 0x460)
                [!provide]                        PROVIDE (_EFP_SPI_CS_D = 0x464)
                [!provide]                        PROVIDE (_EFP_SPI_XFER_B = 0x468)
                [!provide]                        PROVIDE (_EFP_SPI_XFER_M = 0x46c)
                [!provide]                        PROVIDE (_EFP_SPI_RECV_B = 0x470)
                [!provide]                        PROVIDE (_EFP_SPI_RECV_M = 0x474)
                [!provide]                        PROVIDE (_EFP_SPI_SEND_B = 0x478)
                [!provide]                        PROVIDE (_EFP_SPI_SEND_M = 0x47c)
                [!provide]                        PROVIDE (_EFP_ATA_INIT = 0x480)
                [!provide]                        PROVIDE (_EFP_ATA_READ = 0x484)
                [!provide]                        PROVIDE (_EFP_ATA_WRITE = 0x488)
                [!provide]                        PROVIDE (_EFP_ATA_IDENT = 0x48c)
                [!provide]                        PROVIDE (_EFP_INPUTCHAR = 0x494)
                [!provide]                        PROVIDE (_EFP_CHECKINPUT = 0x498)
                [!provide]                        PROVIDE (_FIRMWARE = 0xe00000)
                [!provide]                        PROVIDE (_FIRMWARE_REV = 0xe00400)
                0x00040000                        PROVIDE (_LOAD_ADDRESS = 0x40000)
                0x00002000                        PROVIDE (_RUN_ADDRESS = 0x2000)

.text.init      0x00002000       0x22 load address 0x00040000
                0x00002000                        _init = .
 *(.init)
 .init          0x00002000       0x22 ../../../code/software/libs/build/lib/libstart_serial.a(init.o)
                0x00002022                        _init_end = .

.text.postinit  0x00002024       0xa0 load address 0x00040024
                0x00002024                        _postinit = .
 *(.postinit)
 .postinit      0x00002024       0xa0 ../../../code/software/libs/build/lib/libstart_serial.a(init.o)
                0x0000203e                _start
                0x00002080                CALL_CTORS
                0x000020a2                CALL_DTORS
                0x000020c4                        . = ALIGN (0x4)
                0x000020c4                        _postinit_end = .

.text           0x000020c4       0x9c load address 0x000400c4
                0x000020c4                        _code = .
 *(.text*)
 .text.__kinit  0x000020c4       0x2c ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
                0x000020c4                __kinit
 .text.__cxa_finalize
                0x000020f0       0x70 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
                0x000020f0                __cxa_finalize
 *(.rodata*)
                0x00002160                        _code_end = .
                0x00002160                        . = DATA_SEGMENT_ALIGN (CONSTANT (MAXPAGESIZE), CONSTANT (COMMONPAGESIZE))

.ctors          0x00002160        0x0
                0x00002160                        _ctors = .
 *(.ctors)
 *(SORT_BY_NAME(.ctors.*))
                0x00002160                        _ctors_end = .

.dtors          0x00002160        0x0
                0x00002160                        _dtors = .
 *(SORT_BY_NAME(.dtors.*))
 *(.dtors)
                0x00002160                        _dtors_end = .

.data           0x00002160        0x0
                0x00002160                        _data_start = .
 *(.data*)
                0x00002160                        . = ALIGN (0x4)
                0x00002160                        _data_end = .

.bss            0x00002160     0x3808 load address 0x00040160
                0x00002160                        _bss_start = .
 *(.bss*)
 .bss           0x00002160        0x4 ../../../code/software/libs/build/lib/libstart_serial.a(init.o)
 .bss.cxa_atexit_count
                0x00002164        0x2 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
 .bss.cxa_atexits
                0x00002166     0x3800 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
 *(COMMON)
                0x00005968                        . = ALIGN (0x4)
 *fill*         0x00005966        0x2 
                0x00005968                        _bss_end = .
                0x00005968                        . = DATA_SEGMENT_END (.)
                0x00005968                        _end = .
LOAD kmain.o
LOAD ../../../code/software/libs/build/lib/libprintf.a
LOAD ../../../code/software/libs/build/lib/libcstdlib.a
LOAD ../../../code/software/libs/build/lib/libmachine.a
LOAD ../../../code/software/libs/build/lib/libstart_serial.a
LOAD /home/linuxbrew/.linuxbrew/Cellar/gcc-cross-m68k@13/13.1.0/lib/gcc/m68k-elf/13.1.0/m68000//libgcc.a
OUTPUT(JumpBlox.elf elf32-m68k)

.debug_info     0x00000000      0x254
 .debug_info    0x00000000      0x254 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

.debug_abbrev   0x00000000      0x188
 .debug_abbrev  0x00000000      0x188 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

.debug_loclists
                0x00000000       0x80
 .debug_loclists
                0x00000000       0x80 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

.debug_aranges  0x00000000       0x30
 .debug_aranges
                0x00000000       0x30 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

.debug_rnglists
                0x00000000       0x37
 .debug_rnglists
                0x00000000       0x37 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

.debug_line     0x00000000      0x199
 .debug_line    0x00000000      0x199 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)

.debug_str      0x00000000      0x1cd
 .debug_str     0x00000000      0x1cd ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
                                0x229 (size before relaxing)

.comment        0x00000000       0x12
 .comment       0x00000000       0x12 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
                                 0x13 (size before relaxing)

.debug_frame    0x00000000       0x54
 .debug_frame   0x00000000       0x54 ../../../code/software/libs/build/lib/libstart_serial.a(kinit.o)
